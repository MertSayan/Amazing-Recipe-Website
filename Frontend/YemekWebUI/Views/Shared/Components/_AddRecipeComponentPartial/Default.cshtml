@model CreateRecipeDto
<form id="createRecipeForm" asp-action="AddRecipe" method="post" enctype="multipart/form-data" class="container">
    <div class="row">
        <!-- Sol taraf -->
        <div class="col-md-6">
            <div>
                <label asp-for="Title"></label>
                <input id="Title" asp-for="Title" class="form-control"  />
                <span id="TitleError" class="text-danger"></span>
            </div>

            <div>
                <label asp-for="Description"></label>
                <textarea id="Description" asp-for="Description" class="form-control" ></textarea>
                <span id="DescriptionError" class="text-danger"></span>
            </div>

            <input type="hidden" asp-for="UserId" class="form-control" value="@ViewBag.userId" />
            
            <div>
                <label asp-for="RecipeImageUrl"></label>
                <input asp-for="RecipeImageUrl" type="file" class="form-control" accept="image/*" />
            </div>

            @await Component.InvokeAsync("_AddRecipeGetCategoryComponentPartial")
        </div>

        <!-- Sağ taraf -->
        <div class="col-md-6">
            @await Component.InvokeAsync("_AddRecipeGetMaterialComponentPartial")
        </div>
    </div>

    <button type="submit" class="btn btn-primary mt-3">Submit</button>
</form>



<script>
    document.getElementById('createRecipeForm').addEventListener('submit', function (event) {
        let isValid = true;

        // Title Validation
        const title = document.getElementById('Title');
        const titleError = document.getElementById('TitleError');
        titleError.textContent = '';
        if (!title.value.trim()) {
            titleError.textContent = 'Başlık boş bırakılamaz.';
            isValid = false;
        } else if (title.value.length < 5 || title.value.length > 100) {
            titleError.textContent = 'Başlık en az 5, en fazla 100 karakter olmalıdır.';
            isValid = false;
        }

        // Description Validation
        const description = document.getElementById('Description');
        const descriptionError = document.getElementById('DescriptionError');
        descriptionError.textContent = '';
        if (!description.value.trim()) {
            descriptionError.textContent = 'Açıklama boş bırakılamaz.';
            isValid = false;
        } else if (description.value.length < 50) {
            descriptionError.textContent = 'Açıklama en az 50 karakter olmalıdır.';
            isValid = false;
        }

        // Prevent form submission if validation fails
        if (!isValid) {
            event.preventDefault();
        }
    });

    // /* Form elemanlarının genişliklerini ayarlama */
    // #Title, #Description, #RecipeImageUrl, #category {
    //     max - width: 75 %; /* Elemanları %75 genişlik ile sınırla */
    // }

    // /* Malzeme seçim alanını düzenleme */
    // #materials {
    //     gap: 10px; /* Checkbox'lar arasında boşluk */
    // }

    // #materials.form - check {
    //     min - width: 150px; /* Checkbox genişliği */
    // }

</script>
